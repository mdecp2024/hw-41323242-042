<h1>About</h1>
<p>國立虎尾科技大學機械設計工程系</p>
<p>National Formosa University</p>
<p>Department of Mechanical Design Engineering</p>
<p>cp2024 計算機程式</p>
<p>課程教材:</p>
<p><a aria-label="連結 Learn Python with Jupyter" class="fui-Link ___1q1shib f2hkw1w f3rmtva f1ewtqcl fyind8e f1k6fduh f1w7gpdv fk6fouc fjoy568 figsok6 f1s184ao f1mk8lai fnbmjn9 f1o700av f13mvf36 f1cmlufx f9n3di6 f1ids18y f1tx3yz7 f1deo86v f1eh06m1 f1iescvh fhgqx19 f1olyrje f1p93eir f1nev41a f1h8hb77 f1lqvz6u f10aw75t fsle3fq f17ae5zn" href="https://blog.jupyter.org/introducing-learn-python-with-jupyter-11214f152159" id="menur4f" rel="noreferrer noopener" target="_blank" title="https://blog.jupyter.org/introducing-learn-python-with-jupyter-11214f152159">Learn Python with Jupyter</a> (<a aria-label="連結 site" class="fui-Link ___1q1shib f2hkw1w f3rmtva f1ewtqcl fyind8e f1k6fduh f1w7gpdv fk6fouc fjoy568 figsok6 f1s184ao f1mk8lai fnbmjn9 f1o700av f13mvf36 f1cmlufx f9n3di6 f1ids18y f1tx3yz7 f1deo86v f1eh06m1 f1iescvh fhgqx19 f1olyrje f1p93eir f1nev41a f1h8hb77 f1lqvz6u f10aw75t fsle3fq f17ae5zn" href="https://www.learnpythonwithjupyter.com/" id="menur4h" rel="noreferrer noopener" target="_blank" title="https://www.learnpythonwithjupyter.com/">site</a>, <a aria-label="連結 ebook" class="fui-Link ___1q1shib f2hkw1w f3rmtva f1ewtqcl fyind8e f1k6fduh f1w7gpdv fk6fouc fjoy568 figsok6 f1s184ao f1mk8lai fnbmjn9 f1o700av f13mvf36 f1cmlufx f9n3di6 f1ids18y f1tx3yz7 f1deo86v f1eh06m1 f1iescvh fhgqx19 f1olyrje f1p93eir f1nev41a f1h8hb77 f1lqvz6u f10aw75t fsle3fq f17ae5zn" href="https://localhost:9445/downloads/learn_python_with_jupyter.pdf" id="menur4j" rel="noreferrer noopener" target="_blank" title="https://localhost:9445/downloads/learn_python_with_jupyter.pdf">ebook</a>)</p>
<p>教育版帳號 microsoftonline 登入點: <a aria-label="連結 https://login.microsoftonline.com/" class="fui-Link ___1q1shib f2hkw1w f3rmtva f1ewtqcl fyind8e f1k6fduh f1w7gpdv fk6fouc fjoy568 figsok6 f1s184ao f1mk8lai fnbmjn9 f1o700av f13mvf36 f1cmlufx f9n3di6 f1ids18y f1tx3yz7 f1deo86v f1eh06m1 f1iescvh fhgqx19 f1olyrje f1p93eir f1nev41a f1h8hb77 f1lqvz6u f10aw75t fsle3fq f17ae5zn" href="https://login.microsoftonline.com/" id="menur4l" rel="noreferrer noopener" target="_blank" title="https://login.microsoftonline.com/">https://login.microsoftonline.com/</a></p>
<p>Teams 線上教學:</p>
<p>以 "學號@nfu.edu.tw" 登入 <a aria-label="連結 https://login.microsoftonline.com/" class="fui-Link ___1q1shib f2hkw1w f3rmtva f1ewtqcl fyind8e f1k6fduh f1w7gpdv fk6fouc fjoy568 figsok6 f1s184ao f1mk8lai fnbmjn9 f1o700av f13mvf36 f1cmlufx f9n3di6 f1ids18y f1tx3yz7 f1deo86v f1eh06m1 f1iescvh fhgqx19 f1olyrje f1p93eir f1nev41a f1h8hb77 f1lqvz6u f10aw75t fsle3fq f17ae5zn" href="https://login.microsoftonline.com/" id="menur4n" rel="noreferrer noopener" target="_blank" title="https://login.microsoftonline.com/">https://login.microsoftonline.com/</a> Office 365</p>
<p>Teams 團隊代碼: fqpabi8</p>
<p>個人倉儲:<a href="https://github.com/mdecp2024/hw-41323242-042">https://github.com/mdecp2024/hw-41323242-042</a></p>
<p>個人網站:<a href="https://mdecp2024.github.io/hw-41323242-042/content/index.html">https://mdecp2024.github.io/hw-41323242-042/content/index.html</a></p>
<p>其他資訊:</p>
<p><a aria-label="連結 cd2023_pj3ag4_zmq_football_4.7.7z" class="fui-Link ___1q1shib f2hkw1w f3rmtva f1ewtqcl fyind8e f1k6fduh f1w7gpdv fk6fouc fjoy568 figsok6 f1s184ao f1mk8lai fnbmjn9 f1o700av f13mvf36 f1cmlufx f9n3di6 f1ids18y f1tx3yz7 f1deo86v f1eh06m1 f1iescvh fhgqx19 f1olyrje f1p93eir f1nev41a f1h8hb77 f1lqvz6u f10aw75t fsle3fq f17ae5zn" href="https://sturdy-train-97j697475pw73xqr9-8080.app.github.dev/downloads/cd2023_pj3ag4_zmq_football_4.7.7z" id="menur4t" rel="noreferrer noopener" target="_blank" title="https://sturdy-train-97j697475pw73xqr9-8080.app.github.dev/downloads/cd2023_pj3ag4_zmq_football_4.7.7z">cd2023_pj3ag4_zmq_football_4.7.7z</a></p>
<p><a aria-label="連結 cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z" class="fui-Link ___1q1shib f2hkw1w f3rmtva f1ewtqcl fyind8e f1k6fduh f1w7gpdv fk6fouc fjoy568 figsok6 f1s184ao f1mk8lai fnbmjn9 f1o700av f13mvf36 f1cmlufx f9n3di6 f1ids18y f1tx3yz7 f1deo86v f1eh06m1 f1iescvh fhgqx19 f1olyrje f1p93eir f1nev41a f1h8hb77 f1lqvz6u f10aw75t fsle3fq f17ae5zn" href="https://localhost:9446/downloads/cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z" id="menur4v" rel="noreferrer noopener" target="_blank" title="https://localhost:9446/downloads/cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z">cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z</a></p>
<p></p><h1>Attendance</h1>
<p>出席 (10%) - 自行舉證評分</p>
<p>自行利用 Github commits 提交記錄評分.</p>
<p></p><h1>HW 1</h1>
<h2>HW 1 Exam</h2>
<p>每六人為一組進行協同程式練習</p>
<p>透過 Jupyterlab 協同網頁, 輪流指定各組編寫 Topic 1 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯.</p><h3>w10</h3>
<p></p>
<h4>題目一</h4>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="351" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/uFqTbLf3Psw" title="國立虎尾科技大學機械設計工程系 - 計算機程式 - 題目一: 41323242" width="625"></iframe></p>
<h4>題目二</h4>
<p></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="609" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/PksgwP_XaMM" title="國立虎尾科技大學機械設計工程系 - 計算機程式 題目2 41323242" width="1084"></iframe></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="609" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/JvWgo0h5yb0" title="題目 國立虎尾科技大學機械設計工程系 - 電腦程式題目2 41323242" width="1083"></iframe></p>
<p><span>請問 Python 程式中有關變數的命名, 除了必須以"_", 以及英文大小寫字母開頭之外, 還有甚麼需要特別注意的地方? 與所謂的"關鍵字"(</span><a href="https://mde.tw/cp2024/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/5705fc2a67aa1db0c0d44d6d0478b08b/raw/9d7d4227cc13cdad06544e3960c90a1adfb5c388/python_keywords.py">Keywords</a><span>)有關係嗎? 請實際舉例</span></p>
<h5>Ans:</h5>
<p>在 Python 中，變數命名的規則包括：</p>
<ol>
<li>
<p><strong>以字母或底線開頭</strong>：變數名稱必須以字母（<code>a-z</code>, <code>A-Z</code>）或底線 (<code>_</code>) 開頭，後面可以是字母、數字或底線。例如：<code>var1</code>, <code>_var</code>, <code>my_var</code> 都是合法的。</p>
</li>
<li>
<p><strong>不能使用關鍵字（Keywords）</strong>：Python 有一些保留字，稱為關鍵字，這些字是有特殊含義的，不能用作變數名稱。例如：<code>if</code>, <code>else</code>, <code>while</code>, <code>import</code> 等。</p>
</li>
</ol>
<h4>舉例：</h4>
<ul>
<li>合法變數名稱：<code>my_var</code>, <code>var1</code>, <code>_temp</code></li>
<li>不合法變數名稱：<code>1var</code>（不能以數字開頭）、<code>if</code>（是關鍵字）</li>
</ul>
<p></p>
<h4>題目三</h4>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="609" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/AiNeeeImm38" title="國立虎尾科技大學機械設計工程系 - 計算機程式 - 題目三: 41323242" width="1083"></iframe></p>
<p><span>在影片說明欄位及個人 w10 頁面中說明解題流程與心得</span></p>
<h5><span>第一部分：計算恆定加速度 </span></h5>
<p><span>問題概述： </span></p>
<p><span>初速度： 𝑣 𝑖 = 310 km/h v i =310km/h </span></p>
<p><span>最終速度： 𝑣 𝑓 = 0 m/s v f =0m/s </span></p>
<p><span>距離： 𝑑 = 1000 m d=1000m </span></p>
<p><span>解題步驟： </span></p>
<p><span>單位轉換：</span></p>
<p><span> 將初速度從 km/h km/h 轉換為 m/s m/s，因為公式要求以 m/s m/s 計算： 𝑣 𝑖 = 310 km/h = 86.11 m/s v i =310km/h=86.11m/s 運用公式計算加速度： 使用運動學公式： 𝑣 𝑓 2 = 𝑣 𝑖 2 + 2 𝑎 𝑑 v f 2 =v i 2 +2ad 由於最終速度 𝑣 𝑓 = 0 v f =0，可以簡化為： 𝑎 = − 𝑣 𝑖 2 2 𝑑 = − ( 86.11 ) 2 2 × 1000 = − 3.70 m/s 2 a= 2d −v i 2 = 2×1000 −(86.11) 2 =−3.70m/s 2 </span></p>
<p><span>結論： </span></p>
<p><span>所需的恆定加速度是 − 3.70 m/s 2 −3.70m/s 2 ，表示物體在減速。 </span></p>
<h5><span>第二部分： 計算人口增長時間 </span></h5>
<p><span>問題概述： </span></p>
<p><span>初始人口：</span></p>
<p><span> 𝑃 0 = 100 P 0 =100 目標人口： 𝑃 target = 50000 P target =50000 雙倍時間： 𝑇 = 3 小時 T=3小時</span></p>
<p><span> 解題步驟：</span></p>
<p><span> 運用對數增長公式：</span></p>
<p><span> 使用公式：</span></p>
<p><span> 𝑃 ( 𝑡 ) = 𝑃 0 × 2 𝑡 𝑇 P(t)=P 0 ×2 T t 代入目標人口，並解出時間 𝑡 t： 𝑡 = 𝑇 × log ⁡ 2 ( 𝑃 target 𝑃 0 ) t=T×log 2 ( P 0 P target ) 代入數值計算： 𝑡 = 3 × log ⁡ 2 ( 50000 100 ) = 3 × 11.29 = 33.87 小時 t=3×log 2 ( 100 50000 )=3×11.29=33.87小時 </span></p>
<p><span>結論：</span></p>
<p><span> 人口將在約 33.87 小時後達到 50000。 </span></p>
<h5>心得:</h5>
<p><span> 由於我對於程式的建構還不太熟悉，所以我借助gpt來幫助我完成w10 第三題兩題關於物理和微積分的程式構建；讓我最驚訝的是原來程式也能幫忙解開數學難題，而且速度快又正確。</span></p><h2>w7</h2>
<h3>brython建立</h3>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="609" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/Ur3XqxQLOWw" title="brython建立" width="1133"></iframe></p>
<p></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="575" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/GIvxbvsN8wQ" title="我已經會用簡單的python程式" width="1076"></iframe></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="575" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/s5LTzsWES0o" title="上傳到個人作業倉儲" width="1076"></iframe></p><h1>HW 2</h1>
<h4>主題: Python 的數列、判斷式與重複迴圈 (20%)<span style="background-color: #ffff99;"><br/></span></h4>
<p style="padding-left: 30px;">Python 課程教材: <a href="https://www.learnpythonwithjupyter.com/">https://www.learnpythonwithjupyter.com/</a> - PART 2 and Part 3</p>
<hr/>
<p>延續 HW 1 網頁資料整理與程式練習方法, 整理下列內容 (20%):</p>
<p>PART 2: Introduction to lists and if/else statements</p>
<p>PART 3: Introduction to the for loop</p>
<p>完成上述流程整理後, 請將 HW2 自評分數輸入 cp2024 自評表單中.</p>
<h2>HW 2 Exam</h2>
<p>每六人為一組進行協同程式練習</p>
<p>透過 Jupyterlab 協同網頁, 輪流指定各組編寫 HW 2 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯.</p>
<p><br/><br/><br/> <br/>  </p>
<p></p>
<h1>HW 3</h1>
<h4>主題: Python 的數字、演算法與迴圈 (20%)</h4>
<p style="padding-left: 30px;">Python 課程教材: <a href="https://www.learnpythonwithjupyter.com/">https://www.learnpythonwithjupyter.com/</a> - PART 4 and Part 5</p>
<p>完成上述流程整理後, 請將 HW3 自評分數輸入 cp2024 自評表單中.</p>
<h2>HW 3 Exam</h2>
<p>每六人為一組進行協同程式練習</p>
<p>透過 Jupyterlab 協同網頁, 輪流指定各組編寫 HW 3 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯.</p>
<h3>w6</h3>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">#help(range)
for i in range(1,5):
    print(i)
def print_star_pyramid(rows):
    for i in range(rows):
        # 打印空格
        print(' ' * (rows - i - 1), end='')
        # 打印星星
        print('*' * (2 * i + 1))
 
# 設定金字塔的行數
rows = 5
print_star_pyramid(rows)
def print_number_pyramid(rows):
    for i in range(rows):
        # 打印空格
        print(' ' * (rows - i - 1), end='')
        # 打印數字
        print(str(i + 1) * (2 * i + 1))
 
        </pre>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">    *
   ***
  *****
 *******
*********
</pre>
<p><br/><br/></p>
<h3>w8</h3>
<p><img alt="" height="314" src="/images/螢幕擷取畫面 2024-10-16 122110.png" width="574"/></p>
<p><img alt="" height="330" src="/images/螢幕擷取畫面 2024-10-16 120959.png" width="585"/></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">from coppeliasim_zmqremoteapi_client import RemoteAPIClient
import time
import keyboard

# 利用 zmqRemoteAPI 以 23000 對場景伺服器進行連線
client = RemoteAPIClient('120.113.99.54', 23000)
# 以 getObject 方法取得場景物件
sim = client.getObject('sim')
box = sim.getObject('/box')

# 啟動模擬
sim.startSimulation()

# 設定立方體的尺寸和初始位置
cube_size = 0.2  # 20 cm
spacing = 0.5  # 50 cm 之間的距離（可根據需求調整）

# 擺放立方體的行數和每行的數量
rows = 5  # 從第 1 行到第 5 行
cubes_in_row = [1, 3, 5, 7, 9]  # 每行立方體的數量

# 在正的 Y 方向擺放立方體
for row in range(rows):
    # 計算每行的起始 x 位置，讓其對稱
    start_row_x = - (cubes_in_row[row] - 1) * spacing / 2
    
    for col in range(cubes_in_row[row]):
        # 計算每個立方體的位置
        x_position = start_row_x + col * spacing
        y_position = row * spacing  # 垂直方向上每行間距
        
        # 建立立方體
        cube_handle = sim.createPrimitiveShape(sim.primitiveshape_cuboid, [cube_size, cube_size, cube_size], 0)
        sim.setObjectPosition(cube_handle, -1, [x_position, y_position, cube_size / 2])  # z 方向上升到立方體的中心

# 在負的 Y 方向擺放立方體
for row in range(rows):
    # 計算每行的起始 x 位置，讓其對稱
    start_row_x = - (cubes_in_row[row] - 1) * spacing / 2
    
    for col in range(cubes_in_row[row]):
        # 計算每個立方體的位置
        x_position = start_row_x + col * spacing
        y_position = -row * spacing  # 負的 Y 方向
        
        # 建立立方體
        cube_handle = sim.createPrimitiveShape(sim.primitiveshape_cuboid, [cube_size, cube_size, cube_size], 0)
        sim.setObjectPosition(cube_handle, -1, [x_position, y_position, cube_size / 2])  # z 方向上升到立方體的中心

# 完成立方體的擺放
print("立方體已成功擺放!")

# 設定主迴圈
while True:
    # 在這裡可以進行其他模擬操作
    time.sleep(0.1)  # 確保循環不會過快

    if keyboard.is_pressed('q'):
        # 可以按下 q 鍵跳出重複執行迴圈
        break

# 終止模擬
sim.stopSimulation()
</pre>
<p><span>盧棱講過，偉大的人是絕不會濫用自己的優點的，他們看出自己越過別人的地方，並且意識到這一點，然而絕不會因此就不謙虛。他會這麼說是有理由的。需要考慮周詳學習python的影響及因應對策。培根講過一句值得人反覆尋思的話，尊重人民，也就會受到人民的尊重。這句話語雖然很短，但令我浮想聯翩。</span></p>
<h1>HW 4</h1>
<h4>主題: 利用 Python 控制機電模擬系統 (20%)</h4>
<p style="padding-left: 30px;">利用 <a href="https://solvespace.com/">https://solvespace.com/</a> 建立機械系統零組件</p>
<p style="padding-left: 30px;">利用 <a href="https://www.coppeliarobotics.com/">CoppeliaSim</a> 建立機電模擬系統</p>
<p style="padding-left: 30px;">利用 <a href="https://manual.coppeliarobotics.com/en/zmqRemoteApiOverview.htm">Python</a> 跨網路控制瀏覽器上的機電模擬系統</p>
<p style="padding-left: 30px;">範例:</p>
<p style="padding-left: 60px;"><a href="/downloads/cd2023_pj3ag4_zmq_football_4.7.7z">cd2023_pj3ag4_zmq_football_4.7.7z</a></p>
<p style="padding-left: 60px;"><a href="https://localhost:9446/downloads/cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z">cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z</a></p>
<p>完成上述流程整理後, 請將 HW4 自評分數輸入 cp2024 自評表單中.</p>
<h2>HW 4 Exam</h2>
<p>每六人為一組進行協同程式練習</p>
<p>透過 Jupyterlab 協同網頁, 輪流指定各組編寫 HW 4 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯.</p>
<h1>Final Report</h1>
<p>期末口頭與書面專題報告 (20%)</p>
<p>期末口頭專題報告影片:</p>
<p style="padding-left: 30px;">......</p>
<p>期末書面專題報告檔案 (pdf):</p>
<p style="padding-left: 30px;">......</p>
<p>電腦輔助設計與實習課程總結心得:</p>
<p style="padding-left: 30px;">......</p>
<p>期末報告自評成績:</p>
<p style="padding-left: 30px;">完成上述流程後, 請將 Final Report 自評分數輸入 cp2024 自評表單中.</p>
<p>   </p>
<h1>Brython</h1>
<p>從 1 累加到 100:</p>
<p><button id="add1to100">1 add to 100</button></p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button><button id="threejsblock">Rotating Block</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>